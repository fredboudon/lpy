import openalea.lpy.tableparameterset as tp
from imp import reload
reload(tp)
if PARAMETERS == 0:
	from openalea.lpy.parameterset import ParameterSet
else:
	from openalea.lpy.tableparameterset import TableParameterSet as ParameterSet


def End(lstring):
  print(lstring)
  print(tp.get_table())

module A, Apex, GU

dl = 0.1

Axiom: 
  if PARAMETERS == 2:
    tp.init_table()
  else:
    tp.init_dict_table()    
  produce GU(ParameterSet(t = 0, l=0.1,type='GU')) Apex(ParameterSet(t=1,type='Apex')) 

derivation length: 100
production:

Apex(p):
  p.t += 1
  if p.t % 10 == 0:
    nproduce [+GU(ParameterSet(t = 0, l=0.1,type='GU'))Apex(ParameterSet(t=0,type='Apex'))]GU(ParameterSet(t = 0, l=0.1,type='GU'))
  produce Apex(p)

GU(p):
  p.t += 1
  if p.t < 10:  
    p.l += dl

interpretation:

GU(p) --> F(p.l)

endlsystem
###### INITIALISATION ######

__lpy_code_version__ = 1.1

def __initialiseContext__(context):
	context.animation_timestep = 0.001
	scalars = [('PARAMETERS', 'Integer', 1, 0, 2)]
	context["__scalars__"] = scalars
	for s in scalars:
		if not s[1] == "Category" : context[s[0]] = s[2]
